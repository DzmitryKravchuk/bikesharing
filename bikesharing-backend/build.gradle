plugins {
    id 'org.springframework.boot'
}

ext {
    mapstructVersion = '1.4.2.Final'
    mockitoJunitJupiterVersion = '3.6.0'
    junitJupiterApiVersion='5.7.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation("org.liquibase:liquibase-core")

    // Swagger
    implementation "io.springfox:springfox-boot-starter:${springfoxVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springfoxVersion}"
    implementation "io.swagger.parser.v3:swagger-parser:${swaggerParserVersion}"


    //      Database
    runtimeOnly 'org.postgresql:postgresql'

    //      Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoJunitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterApiVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterApiVersion}"
    testImplementation "org.testcontainers:postgresql:1.15.3"
}

compileJava {
    options.compilerArgs += "-Amapstruct.defaultComponentModel=spring"
    options.compilerArgs += "-Amapstruct.unmappedTargetPolicy=IGNORE"
}

test {
    useJUnitPlatform()
}